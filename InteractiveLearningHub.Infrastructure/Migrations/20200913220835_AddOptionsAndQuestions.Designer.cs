// <auto-generated />
using System;
using InteractiveLearningHub.Infrastructure.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace InteractiveLearningHub.Infrastructure.Migrations
{
    [DbContext(typeof(InteractiveLearningHubDbContext))]
    [Migration("20200913220835_AddOptionsAndQuestions")]
    partial class AddOptionsAndQuestions
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("InteractiveLearningHub.Core.ApplicationUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdentityUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("ApplicationUsers");
                });

            modelBuilder.Entity("InteractiveLearningHub.Core.Certificate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CertificateOwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CertificateOwnerId");

                    b.HasIndex("CourseId");

                    b.ToTable("Certificates");
                });

            modelBuilder.Entity("InteractiveLearningHub.Core.Course", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AuthorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Grade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("InteractiveLearningHub.Core.Exam", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("QuestionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("QuestionId");

                    b.ToTable("Exams");
                });

            modelBuilder.Entity("InteractiveLearningHub.Core.Option", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OptionContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OptionDescriptorTag")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Option");
                });

            modelBuilder.Entity("InteractiveLearningHub.Core.Question", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AnswerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("QuestionOptionsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AnswerId");

                    b.HasIndex("QuestionOptionsId");

                    b.ToTable("Question");
                });

            modelBuilder.Entity("InteractiveLearningHub.Core.Certificate", b =>
                {
                    b.HasOne("InteractiveLearningHub.Core.ApplicationUser", "CertificateOwner")
                        .WithMany()
                        .HasForeignKey("CertificateOwnerId");

                    b.HasOne("InteractiveLearningHub.Core.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId");
                });

            modelBuilder.Entity("InteractiveLearningHub.Core.Course", b =>
                {
                    b.HasOne("InteractiveLearningHub.Core.ApplicationUser", "Author")
                        .WithMany("Courses")
                        .HasForeignKey("AuthorId");
                });

            modelBuilder.Entity("InteractiveLearningHub.Core.Exam", b =>
                {
                    b.HasOne("InteractiveLearningHub.Core.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId");

                    b.HasOne("InteractiveLearningHub.Core.Question", "Question")
                        .WithMany()
                        .HasForeignKey("QuestionId");
                });

            modelBuilder.Entity("InteractiveLearningHub.Core.Question", b =>
                {
                    b.HasOne("InteractiveLearningHub.Core.Option", "Answer")
                        .WithMany()
                        .HasForeignKey("AnswerId");

                    b.HasOne("InteractiveLearningHub.Core.Option", "QuestionOptions")
                        .WithMany()
                        .HasForeignKey("QuestionOptionsId");
                });
#pragma warning restore 612, 618
        }
    }
}
